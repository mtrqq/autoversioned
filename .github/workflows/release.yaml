name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type"
        required: true
        type: choice
        default: auto
        options:
        - auto
        - patch
        - minor
        - major
      prerelease:
        description: "Increase to this prerelease version"
        required: false
        type: choice
        default: none
        options:
        - none
        - alpha
        - beta
        - rc

jobs:
  create-pr:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    permissions:
      pull-requests: write  # to create and update PRs
    outputs:
      branch: release/v${{ steps.cz-bump.outputs.version }}
      version: ${{ steps.cz-bump.outputs.version }}

    steps:
    - uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4.5.0
      with:
        python-version: "3.10"
        architecture: x64

    - name: Bump version
      id: cz-bump
      uses: commitizen-tools/commitizen-action@0.16.3
      with:
        increment: ${{ github.event.inputs.bump != 'auto' && github.event.inputs.bump || '' }}
        prerelease: ${{ github.event.inputs.prerelease != 'none' && github.event.inputs.prerelease || '' }}
        commit: "false"
        push: "false"
        changelog: "true"
        # github_token: ${{ secrets.AUTOVERSIONING_BOT_TOKEN }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # extra_requirements: 'git+https://github.com/meltano/commitizen-version-bump@main'
        changelog_increment_filename: _changelog_fragment.md

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      id: create-pull-request
      with:
        # https://github.com/peter-evans/create-pull-request
        commit-message: "chore: Bump package version"
        title: "chore: Release v${{ steps.cz-bump.outputs.version }}"
        body: |
          Bump changelog for release v${{ steps.cz-bump.outputs.version }}
        branch: release/v${{ steps.cz-bump.outputs.version }}
        base: master
        labels: release

    - name: Approve Pull Request
      if: ${{ steps.create-pull-request.outputs.pull-request-number != 0 }}
      uses: juliangruber/approve-pull-request-action@v2.0.3
      with:
        # https://github.com/juliangruber/approve-pull-request-action
        # github-token: ${{ secrets.AUTOVERSIONING_BOT_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        number: ${{ steps.create-pull-request.outputs.pull-request-number }}

  build-executables:
    runs-on: ubuntu-latest
    needs: [create-pr]
    steps:
    - uses: actions/checkout@v3.3.0
      with:
        ref: ${{ needs.create-pr.outputs.branch }}

    - name: Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version: '~=1.20'
        cache: true

    - name: Download packages
      run: go mod download

    - name: Build
      run:
        GOOS=darwin GOARCH=386 CGO_ENABLED=0 go build -o ./build/serve-darwin-386 -ldflags "-s -w" ./server/serve.go
        GOOS=darwin GOARCH=arm CGO_ENABLED=0 go build -o ./build/serve-darwin-arm -ldflags "-s -w" ./server/serve.go
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ./build/serve-linux-amd64 -ldflags "-s -w" ./server/serve.go
        GOOS=linux GOARCH=386 CGO_ENABLED=0 go build -o ./build/serve-linux-386 -ldflags "-s -w" ./server/serve.go
        GOOS=linux GOARCH=arm CGO_ENABLED=0 go build -o ./build/serve-linux-arm -ldflags "-s -w" ./server/serve.go
      shell: bash
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: "false"

    - uses: actions/upload-artifact@v3
      with:
        name: serve-executable
        path: build/*

  create-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    permissions:
      contents: write       # to create a github release
    needs:
      - create-pr
      - build-executables

    steps:
    - uses: actions/checkout@v3.3.0
      with:
        ref: ${{ needs.create-pr.outputs.branch }}

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.10.0
        install: true

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: mtrqq/autoversioned:${{ needs.create-pr.outputs.version }}

    - uses: actions/download-artifact@v3
      with:
        name: serve-executable
        path: build

    - name: Draft Release
      id: draft-release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        body_path: _changelog_fragment.md
        tag_name: v${{ steps.cz-bump.outputs.version }}
        prerelease: ${{ github.event.inputs.prerelease != 'none' }}
        target_commitish: ${{ needs.create-pr.outputs.branch }}
        files: build/*
